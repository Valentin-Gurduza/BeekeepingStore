@model eUseControl.BeekeepingStore.Domain.Entities.Product.Promotion
@{
    ViewBag.Title = "Create Promotion";
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";

    var product = (eUseControl.BeekeepingStore.Domain.Entities.Product.Product)ViewBag.Product;
    var promotionTypes = (List<string>)ViewBag.PromotionTypes;
}

<div class="container-fluid px-0">
    <div class="row mb-4">
        <div class="col-12">
            <div class="stat-card">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title mb-0">Create New Promotion</h5>
                        <p class="text-muted small mb-0">Product: @product.Name</p>
                    </div>
                    <div>
                        <a href="@Url.Action("ManagePromotions", "AdminDashboard", new { id = product.ProductId })" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-1"></i> Back to Promotions
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8 mx-auto">
            <div class="stat-card">
                @using (Html.BeginForm("CreatePromotion", "AdminDashboard", FormMethod.Post, new { @class = "needs-validation" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })
                    @Html.HiddenFor(model => model.ProductId)

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Promotion Name <span class="text-danger">*</span></label>
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Enter promotion name", required = "required" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                <div class="form-text">A descriptive name for this promotion.</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Promotion Type <span class="text-danger">*</span></label>
                                @Html.DropDownListFor(model => model.PromotionType, new SelectList(promotionTypes), "Select Type", new { @class = "form-select", required = "required", id = "promotionType" })
                                @Html.ValidationMessageFor(model => model.PromotionType, "", new { @class = "text-danger" })
                                <div class="form-text">The type of discount to apply.</div>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="form-label">Description</label>
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "3", placeholder = "Enter promotion description" })
                                <div class="form-text">Optional description explaining the details of this promotion.</div>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6 discount-value-container">
                            <div class="form-group">
                                <label class="form-label">Discount Value <span class="text-danger">*</span></label>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.DiscountValue, new { @class = "form-control", type = "number", step = "0.01", min = "0", required = "required" })
                                    <span class="input-group-text discount-symbol">$</span>
                                </div>
                                @Html.ValidationMessageFor(model => model.DiscountValue, "", new { @class = "text-danger" })
                                <div class="form-text">The amount of discount to apply.</div>
                            </div>
                        </div>
                        <div class="col-md-6 d-none buyxgety-container">
                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label class="form-label">Buy Quantity <span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(model => model.BuyQuantity, new { @class = "form-control", type = "number", min = "1", value = "1" })
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        <label class="form-label">Get Quantity <span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(model => model.GetQuantity, new { @class = "form-control", type = "number", min = "1", value = "1" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Start Date <span class="text-danger">*</span></label>
                                @Html.TextBoxFor(model => model.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">End Date</label>
                                @Html.TextBoxFor(model => model.EndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                                <div class="form-text">Leave empty for a promotion with no end date.</div>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Usage Limit</label>
                                @Html.TextBoxFor(model => model.UsageLimit, new { @class = "form-control", type = "number", min = "1" })
                                <div class="form-text">Maximum number of times this promotion can be used. Leave empty for unlimited.</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Coupon Code</label>
                                @Html.TextBoxFor(model => model.CouponCode, new { @class = "form-control", placeholder = "Enter coupon code (optional)" })
                                <div class="form-text">Optional code customers must enter to get this promotion.</div>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Customer Group</label>
                                @Html.TextBoxFor(model => model.CustomerGroup, new { @class = "form-control", placeholder = "Enter customer group (optional)" })
                                <div class="form-text">Optional group of customers eligible for this promotion.</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Active Status</label>
                                <div class="form-check form-switch">
                                    @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-check-input", role = "switch", id = "isActive" })
                                    <label class="form-check-label" for="isActive">Promotion is active</label>
                                </div>
                                <div class="form-text">Uncheck to create a draft promotion.</div>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex gap-2 mt-4">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-1"></i> Create Promotion
                        </button>
                        <a href="@Url.Action("ManagePromotions", "AdminDashboard", new { id = product.ProductId })" class="btn btn-outline-secondary">
                            Cancel
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            // Handle promotion type change
            $('#promotionType').change(function() {
                var type = $(this).val();

                // Hide all containers first
                $('.discount-value-container, .buyxgety-container').addClass('d-none');

                if (type === 'PercentOff') {
                    $('.discount-value-container').removeClass('d-none');
                    $('.discount-symbol').text('%');
                } else if (type === 'FixedAmount') {
                    $('.discount-value-container').removeClass('d-none');
                    $('.discount-symbol').text('$');
                } else if (type === 'BuyXGetY') {
                    $('.buyxgety-container').removeClass('d-none');
                    $('.discount-value-container').addClass('d-none');
                }
            });

            // Trigger change on page load
            $('#promotionType').change();
        });
    </script>
} 