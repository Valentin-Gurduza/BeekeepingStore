@model List<eUseControl.BeekeepingStore.Domain.Entities.Product.Promotion>
@{
    ViewBag.Title = "Manage Promotions";
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";

    var product = (eUseControl.BeekeepingStore.Domain.Entities.Product.Product)ViewBag.Product;
}

<div class="container-fluid px-0">
    <div class="row mb-4">
        <div class="col-12">
            <div class="stat-card">
                <div class="d-flex justify-content-between align-items-center flex-wrap">
                    <div>
                        <h5 class="card-title mb-0">Manage Promotions</h5>
                        <p class="text-muted small mb-0">Product: @product.Name</p>
                    </div>
                    <div class="d-flex gap-2 mt-2 mt-md-0">
                        <a href="@Url.Action("CreatePromotion", "AdminDashboard", new { productId = product.ProductId })" class="btn btn-primary">
                            <i class="fas fa-plus me-1"></i> Add New Promotion
                        </a>
                        <a href="@Url.Action("ProductDetails", "AdminDashboard", new { id = product.ProductId })" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-1"></i> Back to Details
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12">
            <div class="stat-card">
                <div class="row">
                    <div class="col-md-4">
                        <div class="image-container d-flex align-items-center justify-content-center mb-3 mb-md-0" style="height: 150px; overflow: hidden;">
                            @if (!string.IsNullOrEmpty(product.ImageUrl))
                            {
                                <img src="@product.ImageUrl" alt="@product.Name" class="img-fluid" style="max-height: 100%; max-width: 100%; object-fit: contain;">
                            }
                            else
                            {
                                <div class="bg-light rounded d-flex align-items-center justify-content-center" style="width: 100%; height: 100%;">
                                    <i class="fas fa-image fa-3x text-muted"></i>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-8">
                        <h4 class="mb-3">@product.Name</h4>
                        <div class="mb-3">
                            <span class="badge bg-primary me-2">@product.Category</span>
                        </div>
                        <p class="mb-1"><strong>Regular Price:</strong> <span class="text-success">@product.Price.ToString("C")</span></p>

                        @{
                            var activePromotions = Model.Where(p => p.IsActive && p.StartDate <= DateTime.Now && (!p.EndDate.HasValue || p.EndDate >= DateTime.Now)).ToList();

                            if (activePromotions.Any())
                            {
                                <p class="mb-1"><strong>Active Promotions:</strong> <span class="badge bg-success">@activePromotions.Count active</span></p>
                            }
                            else
                            {
                                <p class="mb-1"><strong>Active Promotions:</strong> <span class="badge bg-secondary">None</span></p>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Promotion List -->
    <div class="row">
        <div class="col-12">
            <div class="stat-card">
                <h5 class="card-title mb-3">Product Promotions</h5>

                @if (Model.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Type</th>
                                    <th>Value</th>
                                    <th>Date Range</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var promotion in Model)
                                {
                                    bool isActive = promotion.IsActive &&
                                                   promotion.StartDate <= DateTime.Now &&
                                                   (!promotion.EndDate.HasValue || promotion.EndDate >= DateTime.Now) &&
                                                   (!promotion.UsageLimit.HasValue || promotion.UsageCount < promotion.UsageLimit);

                                    <tr>
                                        <td>
                                            <strong>@promotion.Name</strong>
                                            @if (!string.IsNullOrEmpty(promotion.CouponCode))
                                            {
                                                <div><span class="badge bg-info">Coupon: @promotion.CouponCode</span></div>
                                            }
                                        </td>
                                        <td>
                                            @{
                                                string typeIcon = "";
                                                string typeLabel = "";

                                                switch (promotion.PromotionType)
                                                {
                                                    case "PercentOff":
                                                        typeIcon = "fas fa-percent";
                                                        typeLabel = "Percentage Off";
                                                        break;
                                                    case "FixedAmount":
                                                        typeIcon = "fas fa-dollar-sign";
                                                        typeLabel = "Fixed Amount";
                                                        break;
                                                    case "BuyXGetY":
                                                        typeIcon = "fas fa-shopping-basket";
                                                        typeLabel = "Buy X Get Y";
                                                        break;
                                                }
                                            }

                                            <i class="@typeIcon me-1"></i> @typeLabel
                                        </td>
                                        <td>
                                            @switch (promotion.PromotionType)
                                            {
                                                case "PercentOff":
                                                    <span class="text-success">@promotion.DiscountValue% off</span>
                                                    break;
                                                case "FixedAmount":
                                                    <span class="text-success">$@promotion.DiscountValue off</span>
                                                    break;
                                                case "BuyXGetY":
                                                    <span class="text-success">Buy @promotion.BuyQuantity, Get @promotion.GetQuantity</span>
                                                    break;
                                            }

                                            @if (promotion.UsageLimit.HasValue)
                                            {
                                                <div class="small text-muted">@promotion.UsageCount / @promotion.UsageLimit uses</div>
                                            }
                                        </td>
                                        <td>
                                            <div>From: @promotion.StartDate.ToString("MM/dd/yyyy")</div>
                                            @if (promotion.EndDate.HasValue)
                                            {
                                                <div>To: @promotion.EndDate.Value.ToString("MM/dd/yyyy")</div>
                                            }
                                            else
                                            {
                                                <div>To: No end date</div>
                                            }
                                        </td>
                                        <td>
                                            @if (isActive)
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else if (!promotion.IsActive)
                                            {
                                                <span class="badge bg-danger">Disabled</span>
                                            }
                                            else if (promotion.StartDate > DateTime.Now)
                                            {
                                                <span class="badge bg-warning">Scheduled</span>
                                            }
                                            else if (promotion.EndDate.HasValue && promotion.EndDate.Value < DateTime.Now)
                                            {
                                                <span class="badge bg-secondary">Expired</span>
                                            }
                                            else if (promotion.UsageLimit.HasValue && promotion.UsageCount >= promotion.UsageLimit.Value)
                                            {
                                                <span class="badge bg-secondary">Limit Reached</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="d-flex gap-2">
                                                <a href="@Url.Action("EditPromotion", "AdminDashboard", new { id = promotion.PromotionId })" class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-edit"></i>
                                                </a>

                                                <form action="@Url.Action("DeletePromotion", "AdminDashboard")" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this promotion?');">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="id" value="@promotion.PromotionId">
                                                    <input type="hidden" name="productId" value="@product.ProductId">
                                                    <button type="submit" class="btn btn-sm btn-outline-danger">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <div class="d-flex">
                            <div class="me-2">
                                <i class="fas fa-info-circle fa-2x"></i>
                            </div>
                            <div>
                                <p class="mb-0">No promotions found for this product. Click "Add New Promotion" to create one.</p>
                            </div>
                        </div>
                    </div>
                }

                <div class="mt-4">
                    <h5 class="mb-3">Promotion Features</h5>
                    <div class="row g-3">
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h6 class="card-title"><i class="fas fa-percent text-primary me-2"></i> Percentage Discount</h6>
                                    <p class="card-text small">Apply a percentage-based discount to the product price.</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h6 class="card-title"><i class="fas fa-dollar-sign text-success me-2"></i> Fixed Amount</h6>
                                    <p class="card-text small">Apply a fixed amount discount to the product price.</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h6 class="card-title"><i class="fas fa-shopping-basket text-warning me-2"></i> Buy X Get Y</h6>
                                    <p class="card-text small">Special offer: Buy a specific quantity and get additional items.</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h6 class="card-title"><i class="fas fa-calendar-alt text-info me-2"></i> Time-Limited</h6>
                                    <p class="card-text small">Set specific start and end dates for your promotions.</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h6 class="card-title"><i class="fas fa-ticket-alt text-danger me-2"></i> Coupon Codes</h6>
                                    <p class="card-text small">Create promotions that activate with specific coupon codes.</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h6 class="card-title"><i class="fas fa-user-tag text-secondary me-2"></i> Customer Groups</h6>
                                    <p class="card-text small">Target specific customer groups with special offers.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div> 